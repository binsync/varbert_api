{"ida-O0-1": "__int64 __fastcall sub_5E007(__int64 a1, __int64 a2, const char *a3)\n{\n  __int64 v3; // rcx\n  __int64 v4; // r8\n  __int64 v5; // r9\n  unsigned int v7; // [rsp+20h] [rbp-10h]\n  int v8; // [rsp+24h] [rbp-Ch]\n  __int64 v9; // [rsp+28h] [rbp-8h]\n\n  v9 = qword_246250;\n  v7 = 0;\n  v8 = atoi(a3);\n  if ( v8 >= 0 )\n  {\n    while ( v9 )\n    {\n      *(v9 + 3240) = v8;\n      v9 = *(v9 + 21664);\n      ++v7;\n    }\n    if ( a2 )\n      sub_33178(\n        4,\n        \"WARN: [%s] plugin name not supported for key 'telemetry_dump_kafka_topic_rr'. Globalized.\\n\",\n        a1,\n        v3,\n        v4,\n        v5);\n    return v7;\n  }\n  else\n  {\n    sub_33178(4, \"WARN: [%s] 'telemetry_dump_kafka_topic_rr' has to be >= 0.\\n\", a1, v3, v4, v5);\n    return 0xFFFFFFFFLL;\n  }\n}\n// 5E064: variable 'v3' is possibly undefined\n// 5E064: variable 'v4' is possibly undefined\n// 5E064: variable 'v5' is possibly undefined\n// 246250: using guessed type __int64 qword_246250;\n", "ida-O0-2": "_BOOL8 __fastcall sub_71DD(int a1, char *const *a2, __int64 a3, int a4, int a5, int a6)\n{\n  _BOOL4 v8; // [rsp+2Ch] [rbp-24h]\n  int v9[6]; // [rsp+30h] [rbp-20h] BYREF\n  unsigned __int64 v10; // [rsp+48h] [rbp-8h]\n\n  v10 = __readfsqword(0x28u);\n  v9[0] = a4;\n  v9[1] = a5;\n  v9[2] = a6;\n  v9[3] = 0;\n  v9[4] = 1;\n  v8 = sub_7575(a1, a2, a3, v9, 0LL);\n  if ( v8 )\n  {\n    sub_70CF(a3);\n    exit(1);\n  }\n  return v8;\n}\n", "ida-O0-3": "__int64 __fastcall EC_GROUP_get_curve(__int64 a1, __int64 a2, __int64 a3, __int64 a4, __int64 a5)\n{\n  if ( *(*a1 + 48LL) )\n    return (*(*a1 + 48LL))(a1, a2, a3, a4, a5);\n  ERR_put_error(16, 291, 66, \"crypto/ec/ec_lib.c\", 522);\n  return 0LL;\n}\n\n", "ida-O0-4": "__int64 __fastcall sub_F9F5(__int64 a1, int a2, __int64 a3, int a4)\n{\n  char v4; // bl\n  unsigned int i; // [rsp+1Ch] [rbp-14h]\n  int v9; // [rsp+20h] [rbp-10h]\n  int v10; // [rsp+24h] [rbp-Ch]\n\n  for ( i = 0; i <= a4 - a2; ++i )\n  {\n    v9 = 0;\n    v10 = 1;\n    while ( v10 == 1 && v9 < a2 )\n    {\n      v4 = sub_CB6D(*(v9 + a1));\n      if ( v4 == sub_CB6D(*((i + v9) + a3)) )\n        v10 = 0;\n      ++v9;\n    }\n    if ( v10 == 1 )\n      return i;\n  }\n  return 0xFFFFFFFFLL;\n}\n", "ida-O0-5": "nt64 __fastcall dcerpc_clusapi_GetNetInterfaceState_r_send(__int64 a1, __int64 a2, __int64 a3, __int64 a4)\n{\n  _QWORD *v5; // rbx\n  _QWORD *v8; // [rsp+20h] [rbp-30h] BYREF\n  __int64 v9; // [rsp+28h] [rbp-28h]\n  __int64 v10; // [rsp+30h] [rbp-20h]\n  unsigned __int64 v11; // [rsp+38h] [rbp-18h]\n\n  v11 = __readfsqword(0x28u);\n  v9 = _tevent_req_create(\n         a1,\n         &v8,\n         8LL,\n         \"struct dcerpc_clusapi_GetNetInterfaceState_r_state\",\n         \"librpc/gen_ndr/ndr_clusapi_c.c:21922\");\n  if ( !v9 )\n    return 0LL;\n  v5 = v8;\n  *v5 = talloc_named_const(v8, 0LL, \"talloc_new: librpc/gen_ndr/ndr_clusapi_c.c:21928\");\n  if ( _tevent_req_nomem(*v8, v9, \"librpc/gen_ndr/ndr_clusapi_c.c:21929\") )\n    return tevent_req_post(v9, a2);\n  v10 = dcerpc_binding_handle_call_send(v8, a2, a3, 0LL, &ndr_table_clusapi, 94LL, *v8, a4);\n  if ( _tevent_req_nomem(v10, v9, \"librpc/gen_ndr/ndr_clusapi_c.c:21936\") )\n    return tevent_req_post(v9, a2);\n  tevent_req_set_callback(v10, sub_C9051, v9);\n  return v9;\n}\n// 31040: using guessed type __int64 __fastcall _tevent_req_create(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);\n// 310E0: using guessed type __int64 __fastcall tevent_req_set_callback(_QWORD, _QWORD, _QWORD);\n// 32120: using guessed type __int64 __fastcall talloc_named_const(_QWORD, _QWORD, _QWORD);\n// 32230: using guessed type __int64 __fastcall dcerpc_binding_handle_call_send(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD);\n// 325C0: using guessed type __int64 __fastcall tevent_req_post(_QWORD, _QWORD);\n// 32A70: using guessed type __int64 __fastcall _tevent_req_nomem(_QWORD, _QWORD, _QWORD);\n", "ida-O0-6": "__int64 __fastcall sub_44869(__int64 a1, const char *a2)\n{\n  unsigned int v3; // [rsp+1Ch] [rbp-14h]\n  char *ptr; // [rsp+20h] [rbp-10h]\n  _DWORD *v5; // [rsp+28h] [rbp-8h]\n\n  v3 = 0;\n  v5 = sub_43EBC(a2);\n  if ( v5 )\n  {\n    while ( 1 )\n    {\n      ptr = sub_441D2(v5);\n      if ( !ptr )\n        break;\n      v3 += sub_448FB(a1, ptr);\n      free(ptr);\n    }\n    sub_43FBA(v5);\n    return v3;\n  }\n  else\n  {\n    *__errno_location() = 22;\n    return 0LL;\n  }\n}\n\n", "ida-O0-7": "__int64 __fastcall sub_2464C(__int64 a1, const char *a2, __int64 a3, __int64 a4, __int64 a5)\n{\n  __int64 v5; // rax\n  int i; // [rsp+3Ch] [rbp-24h]\n  __int64 v11; // [rsp+48h] [rbp-18h]\n  int *v12; // [rsp+50h] [rbp-10h]\n  __int64 v13; // [rsp+58h] [rbp-8h]\n\n  if ( !strcmp(a2, \"static\") || !strcmp(a2, \"transition\") )\n  {\n    v13 = g_malloc0_n(1LL, 32LL);\n    if ( !strcmp(a2, \"static\") )\n      *(v13 + 8) = 1;\n    g_queue_push_tail(*(a5 + 24), v13);\n  }\n  else if ( !strcmp(a2, \"size\") )\n  {\n    v11 = **(*(a5 + 24) + 8LL);\n    v12 = g_malloc0_n(1LL, 16LL);\n    for ( i = 0; *(8LL * i + a3); ++i )\n    {\n      if ( !strcmp(*(8LL * i + a3), \"width\") )\n      {\n        *v12 = atoi(*(8LL * i + a4));\n      }\n      else if ( !strcmp(*(8LL * i + a3), \"height\") )\n      {\n        v12[1] = atoi(*(8LL * i + a4));\n      }\n    }\n    if ( *(*(a5 + 96) + 8LL) && (!strcmp(**(*(a5 + 96) + 8LL), \"file\") || !strcmp(**(*(a5 + 96) + 8LL), \"from\")) )\n    {\n      *(v11 + 16) = g_slist_prepend(*(v11 + 16), v12);\n    }\n    else if ( *(*(a5 + 96) + 8LL) && !strcmp(**(*(a5 + 96) + 8LL), \"to\") )\n    {\n      *(v11 + 24) = g_slist_prepend(*(v11 + 24), v12);\n    }\n  }\n  v5 = g_strdup(a2);\n  return g_queue_push_tail(*(a5 + 96), v5);\n}\n// A370: using guessed type __int64 __fastcall g_slist_prepend(_QWORD, _QWORD);\n// A570: using guessed type __int64 __fastcall g_queue_push_tail(_QWORD, _QWORD);\n// A8E0: using guessed type __int64 __fastcall g_strdup(_QWORD);\n// B710: using guessed type __int64 __fastcall g_malloc0_n(_QWORD, _QWORD);\n", "ida-O0-8": "unsigned __int64 __fastcall but8b_2_avxsp(__int64 a1, __int64 a2, int a3, __int64 a4, int a5, __int64 a6, int a7)\n{\n  __int64 v8[4]; // [rsp+40h] [rbp-40h] BYREF\n  int v9; // [rsp+60h] [rbp-20h]\n  int v10; // [rsp+64h] [rbp-1Ch]\n  int v11; // [rsp+68h] [rbp-18h]\n  int v12; // [rsp+6Ch] [rbp-14h]\n  unsigned __int64 v13; // [rsp+78h] [rbp-8h]\n\n  v13 = __readfsqword(0x28u);\n  v12 = 1 << (a5 - 2);\n  v11 = a7;\n  v8[3] = a6;\n  v10 = a5;\n  v8[2] = a4;\n  v9 = a3;\n  v8[1] = a2;\n  v8[0] = a1;\n  GOMP_parallel(sub_656DFB, v8, 0LL, 0LL);\n  return v13 - __readfsqword(0x28u);\n}\n// C440: using guessed type __int64 __fastcall GOMP_parallel(_QWORD, _QWORD, _QWORD, _QWORD);\n", "ida-O0-9": "void __fastcall sub_302D32(__int64 a1, __int64 a2, __int64 a3, int a4)\n{\n  sub_301190(a1, a2, a3, a4);\n  sub_301190(a1 + 8, a2 + 8, a3, a4);\n}\n\n", "ida-O0-10": "void __fastcall sub_19F49(char *a1, int a2, __int64 a3)\n{\n  int v3; // eax\n  int v5; // [rsp+14h] [rbp-1Ch]\n  char *src; // [rsp+18h] [rbp-18h]\n  int v7; // [rsp+2Ch] [rbp-4h]\n  int v8; // [rsp+2Ch] [rbp-4h]\n\n  src = a1;\n  v5 = a2;\n  if ( a2 == 1 )\n  {\n    sub_1A040(*a1, a3);\n  }\n  else\n  {\n    while ( v5 > 0 )\n    {\n      if ( *(a3 + 16) )\n        v7 = *(a3 + 16) - *a3;\n      else\n        v7 = v5;\n      if ( v7 > 0 )\n      {\n        v3 = v7;\n        if ( v5 <= v7 )\n          v3 = v5;\n        v8 = v3;\n        memmove(*a3, src, v3);\n        *a3 += v8;\n        src += v8;\n        v5 -= v8;\n      }\n      else\n      {\n        if ( !*(a3 + 24) )\n        {\n          *(a3 + 32) += v5;\n          return;\n        }\n        sub_17DE7(a3);\n      }\n    }\n  }\n}\n\n", "ida-O1-1": "__int64 __fastcall mca_coll_monitoring_alltoall(\n        __int64 a1,\n        unsigned int a2,\n        __int64 a3,\n        __int64 a4,\n        unsigned int a5,\n        __int64 a6,\n        __int64 a7,\n        __int64 a8)\n{\n  int v9; // ebp\n  int v10; // er12\n  int i; // ebx\n  __int64 v13; // [rsp+0h] [rbp-88h]\n  unsigned int v18; // [rsp+3Ch] [rbp-4Ch] BYREF\n  __int64 v19[9]; // [rsp+40h] [rbp-48h] BYREF\n\n  v19[1] = __readfsqword(0x28u);\n  v9 = sub_2F01(a7);\n  v10 = sub_2EFA(a7);\n  sub_2EC9(a3, v19);\n  v13 = v19[0] * a2;\n  mca_common_monitoring_coll_a2a(v13 * (v9 - 1), *(a8 + 1664));\n  if ( v9 > 0 )\n  {\n    for ( i = 0; i != v9; ++i )\n    {\n      if ( v10 != i && !sub_3013(i, *(a7 + 256), &v18) )\n        mca_common_monitoring_record_coll(v18, v13);\n    }\n  }\n  return (*(a8 + 632))(a1, a2, a3, a4, a5, a6, a7, *(a8 + 640));\n}\n// 20E0: using guessed type __int64 __fastcall mca_common_monitoring_coll_a2a(_QWORD, _QWORD);\n// 20F0: using guessed type __int64 __fastcall mca_common_monitoring_record_coll(_QWORD, _QWORD);\n\n\n", "ida-O1-2": "__int64 __fastcall sub_A459(__int64 a1, __int64 a2, _QWORD *a3)\n{\n  __int64 internal_fqname; // rax\n  __int64 v6; // rsi\n  unsigned int v7; // eax\n  __int64 v8; // rbx\n  char *v10; // rax\n\n  internal_fqname = sss_create_internal_fqname(a3, a3[1], *(*a3 + 8LL));\n  a3[15] = internal_fqname;\n  if ( internal_fqname )\n  {\n    v6 = sysdb_user_dn(a1, *a3, internal_fqname);\n    if ( v6 )\n    {\n      v7 = sysdb_delete_entry(a2, v6, 0LL);\n      v8 = v7;\n      if ( v7 )\n      {\n        v10 = strerror(v7);\n        sss_debug_fn(\"src/tools/sss_sync_ops.c\", 651LL, \"userdel\", 64LL, \"Removing user failed: %s (%d)\\n\", v10, v8);\n      }\n      sub_E1E7(0);\n      sub_E1E7(1);\n    }\n    else\n    {\n      sss_debug_fn(\"src/tools/sss_sync_ops.c\", 645LL, \"userdel\", 32LL, \"Could not construct a user DN\\n\");\n      LODWORD(v8) = 12;\n    }\n  }\n  else\n  {\n    LODWORD(v8) = 12;\n  }\n  return v8;\n}\n// 4060: using guessed type __int64 __fastcall sss_create_internal_fqname(_QWORD, _QWORD, _QWORD);\n// 41E0: using guessed type __int64 __fastcall sysdb_delete_entry(_QWORD, _QWORD, _QWORD);\n// 4220: using guessed type __int64 __fastcall sysdb_user_dn(_QWORD, _QWORD, _QWORD);\n// 4650: using guessed type __int64 sss_debug_fn(_QWORD, _QWORD, _QWORD, _QWORD, const char *, ...);\n", "ida-O1-3": "nt64 __fastcall sub_4773(char *nptr, uintmax_t *a2, int a3)\n{\n  int *v4; // rax\n  int *v5; // rbp\n  __int64 result; // rax\n  char *v7[7]; // [rsp+0h] [rbp-38h] BYREF\n\n  v7[1] = __readfsqword(0x28u);\n  v7[0] = 0LL;\n  v4 = __errno_location();\n  *v4 = 0;\n  if ( !nptr )\n    return 4294967274LL;\n  v5 = v4;\n  if ( !*nptr )\n    return 4294967274LL;\n  if ( strtoimax(nptr, v7, a3) >= 0 )\n  {\n    *v5 = 0;\n    *a2 = strtoumax(nptr, v7, a3);\n    result = *v5;\n    if ( result )\n    {\n      return 4294967274LL;\n    }\n    else if ( v7[0] == nptr )\n    {\n      return 4294967274LL;\n    }\n    else if ( v7[0] )\n    {\n      if ( *v7[0] )\n        return 4294967274LL;\n    }\n  }\n  else\n  {\n    *v5 = 34;\n    return 4294967274LL;\n  }\n  return result;\n}\n", "ida-O1-4": "char *__fastcall sub_1234E(_QWORD *a1)\n{\n  __int64 v1; // rbx\n  char *v2; // rbx\n  char *v3; // rax\n  __int64 v5; // [rsp+8h] [rbp-40h] BYREF\n  char *v6; // [rsp+10h] [rbp-38h] BYREF\n  __int64 v7; // [rsp+18h] [rbp-30h] BYREF\n  char *s[5]; // [rsp+20h] [rbp-28h] BYREF\n\n  s[1] = __readfsqword(0x28u);\n  mu_list_count(*a1, &v5);\n  if ( v5 == 1 )\n  {\n    mu_list_get(*a1, 0LL, &v6);\n  }\n  else\n  {\n    mu_list_get_iterator(*a1, &v7);\n    mu_iterator_first(v7);\n    v1 = 0LL;\n    while ( !mu_iterator_is_done(v7) )\n    {\n      mu_iterator_current(v7, s);\n      v1 += strlen(s[0]) + 1;\n      mu_iterator_next(v7);\n    }\n    v2 = mu_alloc(v1 + 1);\n    v6 = v2;\n    mu_iterator_first(v7);\n    while ( !mu_iterator_is_done(v7) )\n    {\n      mu_iterator_current(v7, s);\n      strcpy(v2, s[0]);\n      v3 = &v2[strlen(s[0])];\n      v2 = v3 + 1;\n      *v3 = 32;\n      mu_iterator_next(v7);\n    }\n    *(v2 - 1) = 0;\n    mu_iterator_destroy(&v7);\n  }\n  mu_list_destroy(a1);\n  return v6;\n}\n// 70A0: using guessed type __int64 __fastcall mu_iterator_is_done(_QWORD);\n// 7360: using guessed type __int64 __fastcall mu_list_count(_QWORD, _QWORD);\n// 7550: using guessed type __int64 __fastcall mu_iterator_first(_QWORD);\n// 7710: using guessed type __int64 __fastcall mu_list_destroy(_QWORD);\n// 7860: using guessed type __int64 __fastcall mu_iterator_destroy(_QWORD);\n// 7AE0: using guessed type __int64 __fastcall mu_list_get_iterator(_QWORD, _QWORD);\n// 7B80: using guessed type __int64 __fastcall mu_list_get(_QWORD, _QWORD, _QWORD);\n// 7D40: using guessed type __int64 __fastcall mu_iterator_current(_QWORD, _QWORD);\n// 7E10: using guessed type __int64 __fastcall mu_iterator_next(_QWORD);\n// 7E20: using guessed type __int64 __fastcall mu_alloc(_QWORD);\n", "ida-O1-5": "__int64 __fastcall mailimap_nz_number_parse(__int64 a1, _QWORD *a2, __int64 a3, __int64 *a4, _DWORD *a5)\n{\n  __int64 result; // rax\n  int v8; // [rsp+Ch] [rbp-2Ch] BYREF\n  __int64 v9[5]; // [rsp+10h] [rbp-28h] BYREF\n\n  v9[1] = __readfsqword(0x28u);\n  v9[0] = *a4;\n  result = mailimap_number_parse(a1, a2, v9, &v8);\n  if ( !result )\n  {\n    *a5 = v8;\n    *a4 = v9[0];\n  }\n  return result;\n}\n\n", "ida-O1-6": "nt64 __fastcall sub_3732(__int64 a1, __int64 a2, unsigned int a3, __int64 a4, __int64 a5, __int64 a6)\n{\n  __int64 v6; // rbx\n  __int64 v8; // rbp\n  char v10[4]; // [rsp+8h] [rbp-140h] BYREF\n  unsigned int v11; // [rsp+Ch] [rbp-13Ch] BYREF\n  char v12[16]; // [rsp+10h] [rbp-138h] BYREF\n  char v13[264]; // [rsp+20h] [rbp-128h] BYREF\n  unsigned __int64 v14; // [rsp+128h] [rbp-20h]\n\n  v6 = a1;\n  v14 = __readfsqword(0x28u);\n  if ( a1 || (v6 = pcap_lookupdev(v13)) != 0 )\n  {\n    v8 = pcap_open_live(v6, a3, 1LL, 512LL, v13);\n    if ( v8 )\n    {\n      if ( pcap_lookupnet(v6, v10, &v11, v13) == -1 )\n      {\n        warnx(\"%s\", v13);\n        return 0LL;\n      }\n      else if ( pcap_compile(v8, v12, a2, 1LL, v11) < 0 || pcap_setfilter(v8, v12) == -1 )\n      {\n        pcap_perror(v8, \"pcap_compile\");\n        return 0LL;\n      }\n    }\n    else\n    {\n      warnx(\"%s\", v13);\n    }\n  }\n  else\n  {\n    warnx(\"%s\", v13);\n    return 0LL;\n  }\n  return v8;\n}\n// 2060: using guessed type __int64 __fastcall pcap_setfilter(_QWORD, _QWORD);\n// 21B0: using guessed type __int64 __fastcall pcap_compile(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);\n// 21D0: using guessed type __int64 __fastcall pcap_lookupdev(_QWORD);\n// 21F0: using guessed type __int64 __fastcall pcap_perror(_QWORD, _QWORD);\n// 2270: using guessed type __int64 __fastcall pcap_open_live(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);\n// 22D0: using guessed type __int64 __fastcall pcap_lookupnet(_QWORD, _QWORD, _QWORD, _QWORD);\n// 3732: using guessed type char var_140[4];\n", "ida-O1-7": "nt64 __fastcall zip_file_set_mtime(__int64 a1, unsigned __int64 a2, __int64 a3)\n{\n  unsigned __int64 v4; // rbx\n  __m128i *v6; // rax\n\n  if ( !sub_781F(a1, a2, 0, 0LL) )\n    return 0xFFFFFFFFLL;\n  if ( (*(a1 + 36) & 2) != 0 )\n  {\n    zip_error_set(a1 + 16, 25LL, 0LL);\n    return 0xFFFFFFFFLL;\n  }\n  else\n  {\n    v4 = *(a1 + 88) + 32 * a2;\n    if ( *(v4 + 8) || (v6 = sub_6C63(*v4), (*(v4 + 8) = v6) != 0LL) )\n    {\n      *(*(v4 + 8) + 24LL) = a3;\n      **(v4 + 8) |= 0x20u;\n      return 0LL;\n    }\n    else\n    {\n      zip_error_set(a1 + 16, 14LL, 0LL);\n      return 0xFFFFFFFFLL;\n    }\n  }\n}\n// 4530: using guessed type __int64 __fastcall zip_error_set(_QWORD, _QWORD, _QWORD);\n", "ida-O1-8": "__int64 __fastcall sub_31E3(__int64 a1, _DWORD *a2, int a3, int a4)\n{\n  __int64 v5; // r15\n  _BYTE *v6; // rbp\n  _QWORD *v7; // rax\n  _QWORD *v8; // rbx\n  __pid_t v9; // eax\n\n  v5 = *(a1 + 24);\n  v6 = malloc(0x20uLL);\n  v7 = malloc(0x14uLL);\n  v8 = v7;\n  if ( v6 && v7 )\n  {\n    if ( v5 )\n    {\n      *(v5 + 8) = 4;\n      *v5 = v6;\n    }\n    else\n    {\n      *(a1 + 52) = 4;\n      *(a1 + 16) = v6;\n    }\n    *(a1 + 24) = v6;\n    *(a1 + 32) = 4;\n    *v7 = 0LL;\n    v7[1] = 0LL;\n    *(v7 + 4) = 0;\n    *v7 = 69;\n    *(v7 + 3) = 20;\n    *(v7 + 4) = getpid() % 256;\n    v9 = getpid();\n    if ( v9 < 0 )\n      BYTE1(v9) = (v9 + 255) >> 8;\n    *(v8 + 5) = BYTE1(v9);\n    *(v8 + 8) = -1;\n    *(v8 + 9) = 59;\n    *(v8 + 3) = a3;\n    *(v8 + 4) = a4;\n    *v6 = 0LL;\n    v6[8] = 59;\n    *(v6 + 2) = v8;\n    *(v6 + 6) = 20;\n    v6[9] = 20;\n    *(a1 + 48) += 20;\n    *a2 += 20;\n    return 0LL;\n  }\n  else\n  {\n    if ( v7 )\n      free(v7);\n    if ( v6 )\n      free(v6);\n    return 0xFFFFFFFFLL;\n  }\n}\n\n", "ida-O1-9": "__int64 __fastcall sub_3AD4(unsigned int *a1, __int64 a2, int a3)\n{\n  __int64 v3; // rcx\n  signed int v4; // ebx\n  int v5; // er11\n  signed int v6; // er10\n  int v7; // er8\n  __int64 v8; // rdi\n  __int64 v9; // r9\n  __int64 result; // rax\n  __int64 v11; // rdx\n\n  v3 = *(a1 + 2);\n  v4 = *a1;\n  v5 = a1[1];\n  v6 = a1[11];\n  v7 = 0;\n  v8 = *a1;\n  v9 = a3;\n  if ( v5 > 0 )\n  {\n    do\n    {\n      v11 = 0LL;\n      if ( v4 > 0 )\n      {\n        do\n        {\n          result = (*(v3 + 2 * v11) << 19) & 0xF80000 | (*(v3 + 2 * v11) >> 1) & 0x300 | (32 * *(v3 + 2 * v11)) & 0xFC00 | (*(v3 + 2 * v11) >> 13) | (*(v3 + 2 * v11) << 14) & 0x70000 | *(v3 + 2 * v11 + 1) & 0xF8 | 0xFF000000;\n          *(a2 + 4 * v11++) = result;\n        }\n        while ( v11 != v8 );\n      }\n      v3 += v6;\n      a2 += v9;\n      ++v7;\n    }\n    while ( v5 != v7 );\n  }\n  return result;\n}\n", "ida-O1-10": "__int64 __fastcall sub_5C77(char *nptr, uintmax_t *a2, int a3)\n{\n  int *v4; // rax\n  int *v5; // rbp\n  __int64 result; // rax\n  char *v7[7]; // [rsp+0h] [rbp-38h] BYREF\n\n  v7[1] = __readfsqword(0x28u);\n  v7[0] = 0LL;\n  v4 = __errno_location();\n  *v4 = 0;\n  if ( !nptr )\n    return 4294967274LL;\n  v5 = v4;\n  if ( !*nptr )\n    return 4294967274LL;\n  if ( strtoimax(nptr, v7, a3) >= 0 )\n  {\n    *v5 = 0;\n    *a2 = strtoumax(nptr, v7, a3);\n    result = *v5;\n    if ( result )\n    {\n      return 4294967274LL;\n    }\n    else if ( v7[0] == nptr )\n    {\n      return 4294967274LL;\n    }\n    }\n    else if ( v7[0] )\n    {\n      if ( *v7[0] )\n        return 4294967274LL;\n    }\n  }\n  else\n  {\n    *v5 = 34;\n    return 4294967274LL;\n  }\n  return result;\n}\n", "ida-O2-1": "unsigned __int64 __fastcall sub_1A0490(_DWORD *a1, _DWORD *a2, _DWORD *a3, __int64 a4, unsigned int a5)\n{\n  int v7[3]; // [rsp+9h] [rbp-3Fh] BYREF\n  unsigned __int64 v8; // [rsp+18h] [rbp-30h]\n\n  v8 = __readfsqword(0x28u);\n  if ( a5 > __fread_chk(v7, 15LL, 1LL, a5, a4) )\n  {\n    *a1 = -1;\n    *a2 = -1;\n    *a3 = -1;\n  }\n  else\n  {\n    *a1 = v7[0];\n    *a2 = v7[1];\n    *a3 = v7[2];\n  }\n  return v8 - __readfsqword(0x28u);\n}\n// 188390: using guessed type __int64 __fastcall __fread_chk(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD);\n", "ida-O2-2": "unsigned __int64 __fastcall sub_7B40(_QWORD *a1)\n{\n  FILE *v1; // rax\n  FILE *v2; // rbp\n  char *v3; // rax\n  __int64 v5; // [rsp+0h] [rbp-B8h] BYREF\n  __int64 v6; // [rsp+8h] [rbp-B0h] BYREF\n  char s[136]; // [rsp+10h] [rbp-A8h] BYREF\n  unsigned __int64 v8; // [rsp+98h] [rbp-20h]\n\n  v8 = __readfsqword(0x28u);\n  v1 = fopen(\"/proc/uptime\", \"r\");\n  if ( !v1 )\n  {\nLABEL_5:\n    v3 = dcgettext(0LL, \"Cannot read %s\\n\", 5);\n    __fprintf_chk(stderr, 1LL, v3, \"/proc/uptime\");\n    exit(2);\n  }\n  v2 = v1;\n  if ( !fgets(s, 128, v1) || __isoc99_sscanf(s, \"%lu.%lu\", &v5, &v6) != 2 )\n  {\n    fclose(v2);\n    goto LABEL_5;\n  }\n  *a1 = v6 + 100 * v5;\n  fclose(v2);\n  return v8 - __readfsqword(0x28u);\n}\n", "ida-O2-3": "char *__fastcall sub_5720(unsigned int a1, __int64 a2, __int64 a3, __int64 a4, __int64 a5, __int64 a6)\n{\n  int v6; // eax\n  char *v7; // rdi\n  int v8; // ebp\n  ssize_t v9; // rax\n  ssize_t v10; // rbx\n  char *v11; // rax\n  char *result; // rax\n  char *file; // [rsp+8h] [rbp-1030h] BYREF\n  char buf[16]; // [rsp+10h] [rbp-1028h] BYREF\n  unsigned __int64 v15; // [rsp+1018h] [rbp-20h]\n\n  v15 = __readfsqword(0x28u);\n  if ( __asprintf_chk(&file, 1LL, \"/proc/%d/cmdline\", a1) == -1 )\n    return 0LL;\n  v6 = open(file, 0);\n  v7 = file;\n  v8 = v6;\n  if ( v6 < 0 )\n  {\nLABEL_11:\n    free(v7);\n    return 0LL;\n  }\n  free(file);\n  v9 = read(v8, buf, 0xFFFuLL);\n  v10 = v9;\n  if ( v9 > 0 )\n  {\n    buf[v9] = 0;\n    close(v8);\n    v11 = buf;\n    do\n    {\n      if ( !*v11 )\n        *v11 = 32;\n      ++v11;\n    }\n    while ( v11 != &buf[v10] );\n    result = strdup(buf);\n    if ( !result )\n      return 0LL;\n    if ( *result )\n      return result;\n    v7 = result;\n    goto LABEL_11;\n  }\n  close(v8);\n  return 0LL;\n}\n// 2220: using guessed type __int64 __asprintf_chk(_QWORD, _QWORD, const char *, ...);\n// 5720: using guessed type char buf[16];\n", "ida-O2-4": "void __fastcall sub_FE20(__int64 a1, int a2, _DWORD *a3, _DWORD *a4)\n{\n  const unsigned __int16 **v8; // rax\n  int v9; // er8\n  int v10; // ecx\n  const unsigned __int16 *v11; // r10\n  __int64 v12; // rax\n  int v13; // esi\n  int v14; // edi\n\n  if ( a2 > 0 )\n  {\n    v8 = __ctype_b_loc();\n    v9 = 0;\n    v10 = 0;\n    v11 = *v8;\n    v12 = 0LL;\n    while ( 1 )\n    {\n      v13 = v10;\n      v14 = v12;\n      v10 = v11[*(a1 + v12)] & 0x200;\n      if ( (v11[*(a1 + v12)] & 0x200) != 0 )\n        break;\n      if ( v13 )\n      {\n        ++v12;\n        *a3 = v9;\n        *a4++ = v14 - v9;\n        ++a3;\n        if ( a2 == v12 )\n        {\nLABEL_9:\n          if ( v10 )\n          {\n            *a3 = v9;\n            *a4 = a2 - v9;\n          }\n          return;\n        }\n      }\n      else\n      {\nLABEL_5:\n        if ( a2 == ++v12 )\n          goto LABEL_9;\n      }\n    }\n    if ( !v13 )\n      v9 = v12;\n    goto LABEL_5;\n  }\n}\n\n", "ida-O2-5": "__int64 __fastcall dcerpc_winbind_GetForestTrustInformation_recv(__int64 a1, __int64 a2, _DWORD *a3)\n{\n  __int64 v4; // rax\n  __int64 type_abort; // rbx\n  unsigned int v7; // [rsp+4h] [rbp-34h] BYREF\n  unsigned __int64 v8; // [rsp+8h] [rbp-30h]\n\n  v8 = __readfsqword(0x28u);\n  v4 = _tevent_req_data(a1);\n  type_abort = _talloc_get_type_abort(\n                 v4,\n                 \"struct dcerpc_winbind_GetForestTrustInformation_state\",\n                 \"librpc/gen_ndr/ndr_winbind_c.c:5171\");\n  if ( tevent_req_is_nterror(a1, &v7) )\n  {\n    tevent_req_received(a1);\n    return v7;\n  }\n  else\n  {\n    _talloc_steal_loc(a2, *(type_abort + 64), \"librpc/gen_ndr/ndr_winbind_c.c:5181\");\n    *a3 = *(type_abort + 24);\n    tevent_req_received(a1);\n    return 0LL;\n  }\n}\n// 4260: using guessed type __int64 __fastcall tevent_req_is_nterror(_QWORD, _QWORD);\n// 42E0: using guessed type __int64 __fastcall tevent_req_received(_QWORD);\n// 4440: using guessed type __int64 __fastcall _tevent_req_data(_QWORD);\n// 4460: using guessed type __int64 __fastcall _talloc_get_type_abort(_QWORD, _QWORD, _QWORD);\n// 4540: using guessed type __int64 __fastcall _talloc_steal_loc(_QWORD, _QWORD, _QWORD);\n", "ida-O2-6": "__int64 *__fastcall sub_407F0(unsigned int a1, unsigned __int64 a2, unsigned __int64 a3)\n{\n  unsigned __int64 v4; // rcx\n  unsigned __int64 v5; // rcx\n  unsigned __int64 v6; // rax\n  unsigned __int64 v7; // rax\n  __int64 v8; // r10\n  unsigned __int64 v9; // rdx\n  __int64 v10; // r9\n  __int64 v11; // rcx\n  __int64 v12; // rsi\n  __int64 v13; // rax\n  __int64 v14; // rax\n  __int64 v15; // rax\n  unsigned __int64 v16; // rsi\n\n  if ( a2 > 0xFB )\n    return allocGroupOnNode(a1, a3);\n  _BitScanReverse64(&v4, a2);\n  v5 = v4 - ((((a2 - 1) & a2) == 0) - 1);\n  _BitScanReverse64(&v6, a3);\n  v7 = v6 - (((a3 & (a3 - 1)) == 0) - 1);\n  if ( v5 < v7 && v5 <= 7 )\n  {\n    do\n    {\n      if ( qword_8CD00[8 * a1 + v5] )\n        break;\n      if ( ++v5 > 7 )\n        break;\n    }\n    while ( v7 > v5 );\n  }\n  if ( v5 == 8 || v7 == v5 )\n     return allocGroupOnNode(a1, a3);\n  v8 = a1;\n  v9 = v5 + 8LL * a1;\n  v10 = qword_8CD00[v9];\n  if ( *(v10 + 48) > a3 )\n  {\n    v10 = sub_40080(v10, a1, a3, v5);\n  }\n  else\n  {\n    v11 = *(v10 + 24);\n    v12 = *(v10 + 16);\n    if ( v11 )\n      *(v11 + 16) = v12;\n    else\n      qword_8CD00[v9] = v12;\n    v13 = *(v10 + 16);\n    if ( v13 )\n      *(v13 + 24) = *(v10 + 24);\n }\n  v14 = *v10;\n  *(v10 + 16) = 0LL;\n  *(v10 + 8) = v14;\n  v15 = *(v10 + 48);\n  if ( (v15 - 2) <= 0xFA )\n  {\n    v15 = v10 + (v15 << 6) - 64;\n    *(v15 + 48) = 0;\n    *(v15 + 16) = v10;\n    LODWORD(v15) = *(v10 + 48);\n  }\n  v16 = v15 + qword_8CC68;\n  n_alloc_blocks_by_node[v8] += v15;\n  qword_8CC68 = v16;\n  if ( v15 )\n  {\n    if ( v16 > qword_8CC60 )\n      qword_8CC60 = v16;\n  }\n}\n// 40903: variable 'v8' is possibly undefined\n// 8CBE0: using guessed type _QWORD n_alloc_blocks_by_node[16];\n// 8CC60: using guessed type __int64 qword_8CC60;\n// 8CC68: using guessed type __int64 qword_8CC68;\n// 8CD00: using guessed type _QWORD qword_8CD00[128];\n\n\n", "ida-O2-7": "int __fastcall sub_AEC0(__int64 a1, const char *a2, char *a3)\n{\n  __int64 v4; // rax\n  __int64 v5; // rbx\n  char v7[264]; // [rsp+0h] [rbp-128h] BYREF\n  unsigned __int64 v8; // [rsp+108h] [rbp-20h]\n\n  v8 = __readfsqword(0x28u);\n  v4 = sub_AE70(a1, a2);\n  if ( v4 )\n  {\n    v5 = v4;\n    sub_CBD0(a3, v7, 0x100uLL);\n    return sub_AB00((v5 + 56), v7);\n  }\n  else\n  {\n    sub_9A50(3u, \"state_addenum: base variable (%s) does not exist\", a2);\n    return 0;\n  }\n}\n\n", "ida-O2-8": "__int64 __fastcall sub_1A8600(_DWORD *a1, _DWORD *a2, char a3, int a4, char a5)\n{\n  if ( a4 == 2 )\n  {\n    if ( !a3 )\n      return sub_1A8590(a1, a2, a5);\n  }\n  else if ( a3 )\n  {\n    return sub_1A8590(a1, a2, a5);\n  }\n  return sub_1A8540(a1, a2, a5);\n}\n\n\n", "ida-O2-9": "void *__fastcall sub_1D040(void *dest, size_t maxlen, unsigned int a3, const char *a4, __int64 a5, __int64 a6)\n{\n  switch ( a3 )\n  {\n    case 1u:\n      sub_21380(dest, &unk_25F64, maxlen);\n      break;\n    case 2u:\n      sub_21380(dest, \"env_From\", maxlen);\n      break;\n    case 3u:\n      sub_21380(dest, \"From\", maxlen);\n      break;\n    case 4u:\n      if ( a4 )\n        __snprintf_chk(dest, maxlen, 1LL, -1LL, \"substitute %s\", a4);\n      else\n        snprintf(dest, maxlen, \"substitute\", a3, a5, a6);\n      break;\n    case 5u:\n      sub_21380(dest, \"Message-ID\", maxlen);\n      break;\n    case 6u:\n      sub_21380(dest, \"Received\", maxlen);\n      break;\n    case 7u:\n      sub_21380(dest, \"Body\", maxlen);\n      break;\n    case 8u:\n      sub_21380(dest, \"Fuz1\", maxlen);\n      break;\n    case 9u:\n      sub_21380(dest, \"Fuz2\", maxlen);\n      break;\n    case 0xAu:\n      if ( a6 )\n        sub_21380(dest, \"Grey_Msg\", maxlen);\n      else\n        sub_21380(dest, \"rep-total\", maxlen);\n      break;\n    case 0xBu:\n      if ( a6 )\n        sub_21380(dest, \"Grey3\", maxlen);\n      else\n        sub_21380(dest, \"rep\", maxlen);\n      break;\n    case 0xCu:\n      sub_21380(dest, \"server-ID\", maxlen);\n      break;\n    case 0xDu:\n      if ( a5 )\n        sub_21380(dest, \"flood path\", maxlen);\n      else\n        sub_21380(dest, \"env_To\", maxlen);\n      break;\n    default:\n      __snprintf_chk(dest, maxlen, 1LL, -1LL, \"type %d\", a3);\n      break;\n  }\n  return dest;\n}\n// 3060: using guessed type __int64 __snprintf_chk(_QWORD, _QWORD, _QWORD, _QWORD, const char *, ...);\n\n\n", "ida-O2-10": "__int64 __fastcall sub_11CA0(_QWORD *a1, __int64 a2)\n{\n  __int64 v2; // r14\n  __off64_t v3; // r13\n  __int64 result; // rax\n  __int64 v5; // r14\n  _QWORD v6[1032]; // [rsp+0h] [rbp-2040h] BYREF\n\n  v2 = a1[5];\n  v6[1025] = __readfsqword(0x28u);\n  if ( v2 <= 0 )\n    return 0LL;\n  v3 = 0LL;\n  while ( 1 )\n  {\n    v5 = v2 - v3;\n    if ( v5 > 0x2000 )\n      LODWORD(v5) = 0x2000;\n    result = sub_11A80(a1, v6, v5, v3);\n    if ( result < 0 )\n      break;\n    result = (*(*a1 + 24LL))(a2, v6, v5);\n    if ( result < 0 )\n      break;\n    v2 = a1[5];\n    v3 += result;\n    if ( v2 <= v3 )\n      return 0LL;\n  }\n  return result;\n}\n\n"}